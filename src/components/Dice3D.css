/* 3D Dice Styling - Responsive & CSS Variables */

.dice-container {
  /* Define base size for mobile */
  --dice-size: 52px;
  /* Define base perspective for mobile */
  --dice-perspective: calc(
    var(--dice-size) * 6
  ); /* Adjusted perspective based on size */

  width: var(--dice-size);
  height: var(--dice-size);
  perspective: var(--dice-perspective);
  perspective-origin: 50% 50%;
  display: inline-block;
}

.dice {
  width: 100%; /* Use container size */
  height: 100%; /* Use container size */
  position: relative;
  transform-style: preserve-3d;
  transform: rotateX(0deg) rotateY(0deg);
  /* Colors are passed via inline style variables from Dice.jsx */
}

.dice.rolling {
  animation: roll 1.5s ease-out;
}

@keyframes roll {
  0% {
    transform: rotateX(0deg) rotateY(0deg);
  }
  25% {
    transform: rotateX(360deg) rotateY(180deg);
  }
  50% {
    transform: rotateX(720deg) rotateY(360deg);
  }
  75% {
    transform: rotateX(1080deg) rotateY(540deg);
  }
  100% {
    transform: rotateX(1440deg) rotateY(720deg);
  }
}

.face {
  position: absolute;
  width: 100%; /* Use container size */
  height: 100%; /* Use container size */
  border-radius: 10%;
  box-shadow: inset 0 0 calc(var(--dice-size) * 0.1) rgba(0, 0, 0, 0.2);
  background-color: var(
    --dice-primary-color,
    white
  ); /* Use variable with fallback */
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

/* Face positioning using translateZ based on size */
.face-1 {
  transform: translateZ(calc(var(--dice-size) / 2));
}
.face-2 {
  transform: rotateY(90deg) translateZ(calc(var(--dice-size) / 2));
}
.face-3 {
  transform: rotateX(90deg) translateZ(calc(var(--dice-size) / 2));
}
.face-4 {
  transform: rotateX(-90deg) translateZ(calc(var(--dice-size) / 2));
}
.face-5 {
  transform: rotateY(-90deg) translateZ(calc(var(--dice-size) / 2));
}
.face-6 {
  transform: rotateY(180deg) translateZ(calc(var(--dice-size) / 2));
}

.dot {
  --dot-size: calc(var(--dice-size) * 0.15); /* Calculate dot size */
  width: var(--dot-size);
  height: var(--dot-size);
  border-radius: 50%;
  box-shadow: inset 0 0 calc(var(--dot-size) * 0.3) rgba(0, 0, 0, 0.3); /* Adjusted shadow */
  background-color: var(
    --dice-dot-color,
    black
  ); /* Use variable with fallback */
  position: absolute;
}

/* Dot positioning using percentages (relative to face size) */
.center-dot {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.top-left {
  top: 20%;
  left: 20%;
}

.top-right {
  top: 20%;
  right: 20%;
}

.middle-left {
  top: 50%;
  left: 20%;
  transform: translateY(-50%);
}

.middle-right {
  top: 50%;
  right: 20%;
  transform: translateY(-50%);
}

.bottom-left {
  bottom: 20%;
  left: 20%;
}

.bottom-right {
  bottom: 20%;
  right: 20%;
}

/* --- Mobile First Media Queries --- */

/* Medium screens (tablets, larger phones) */
@media (min-width: 481px) {
  .dice-container {
    --dice-size: 60px; /* Tablet size */
    --dice-perspective: calc(var(--dice-size) * 6.5); /* Adjust perspective */
  }
}

/* Large screens (desktops) */
@media (min-width: 769px) {
  .dice-container {
    --dice-size: 80px; /* Desktop size */
    --dice-perspective: calc(var(--dice-size) * 7); /* Adjust perspective */
  }
}
